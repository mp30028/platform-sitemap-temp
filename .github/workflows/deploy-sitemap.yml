name: Deploy swot-sitemap

env:
  FILENAME: sitemap.xml
  FILE_LOCATION: swot-sitemap
  FILE_LINK_LOCATION: /mnt/zonesoft-volume-2/data/api-storage
  FILE_LINK: sitemap.xml.current-sitemap.UPLOADED

on:
 workflow_dispatch:
 

jobs:
  generate-filename:
    runs-on: ubuntu-latest
    outputs:
      release_filename: ${{ steps.filename.outputs.value }}
    steps:    
      - name: Generate Timestamp
        id: generated_timestamp
        shell: bash
        run: |
            timestamp=$(date +'%Y%m%d-%H%M%S');
            echo "value=$timestamp" >> $GITHUB_OUTPUT;

      - name: Build Release Filename
        id: filename        
        shell: bash
        run: |
            suffix="${{ steps.generated_timestamp.outputs.value }}";
            prefix="${FILENAME%.*}";
            extension="${FILENAME##*.}"            
            echo "value=$prefix-$suffix.$extension" >> $GITHUB_OUTPUT;

  create-release:
    needs: [generate-filename]
    runs-on: ubuntu-latest
    steps:    

      - name: Checkout this repository
        uses: actions/checkout@v3  

      - name: Make staging directory
        shell: bash
        run: sudo mkdir -p /staging
      
      - name: Copy sitemap.xml from source to staging
        id: staged_artifacts
        shell: bash
        run: |
          sudo cp ./${FILE_LOCATION}/${FILENAME} /staging/${{ needs.generate-filename.outputs.release_filename }};
          # ls -l /staging;
          # cat /staging/${{ needs.generate-filename.outputs.release_filename }};

      - name: Upload release-sitemap to GitHub packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.generate-filename.outputs.release_filename }}
          path: /staging
          compression-level: 0 # no compression
  
  push-release-to-remote:
#    if: ${{ github.ref_name == 'main' && github.event_name == 'push' }}
    needs: [generate-filename]    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3
        
      - name: Make staging directory
        run:  |
          mkdir -p staging/${{ env.FILE_LOCATION }}
        
      - name: Download the released sitemap to staging
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.generate-filename.outputs.release_filename }}
          path: staging/${{ env.FILE_LOCATION }}

      - name: sftp staged artifacts to remote
        uses: mp30028/platform-sitemap-temp/.github/actions/sftp-to-remote@seed_with_artifacts_from_platform-sitemap
        with:
          remote_username: ${{ secrets.REMOTE_USERNAME  }}
          remote_host: ${{ secrets.REMOTE_SERVER  }}
          remote_port: ${{ secrets.REMOTE_PORT  }}
          remote_ssh_key: ${{ secrets.REMOTE_SSH_KEY  }}
          local_filepath: staging/${{ env.FILE_LOCATION }}
          remote_filepath: ${{ vars.REMOTE_FILEPATH  }}
          
      - name: Create symlink to released sitemap
        uses: mp30028/platform-sitemap-temp/.github/actions/execute-remote-command@main
        with:
          remote_username: ${{ secrets.REMOTE_USERNAME  }}
          remote_host: ${{ secrets.REMOTE_SERVER  }}
          remote_port: ${{ secrets.REMOTE_PORT  }}
          remote_ssh_key: ${{ secrets.REMOTE_SSH_KEY  }}
          remote_cmd: |
            #cd ${{ env.FILE_LINK_LOCATION }}; 
            rm ${{ env.FILE_LINK_LOCATION }}/${{ env.FILE_LINK }};
            ln -s ${{ vars.REMOTE_FILEPATH }}/${{ env.FILE_LOCATION }}/${{ needs.generate-filename.outputs.release_filename }} ${{ env.FILE_LINK_LOCATION }}/${{ env.FILE_LINK }};  
  
            
#  print-details:
#    needs: [generate-filename]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Print Details
#        id: printed_details
#        shell: bash
#        run: |
#          echo "FILENAME = $FILENAME";
#          #echo "FILENAME_EXTENSION = $FILENAME_EXTENSION";
#          echo "release_filename = ${{ needs.generate-filename.outputs.release_filename }}";